# -*- coding: utf-8 -*-
"""OASIS INFOBYTE task1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ek5tf27jU5jGuv-4ohtEPjg2fBZGP2Uo
"""

# Commented out IPython magic to ensure Python compatibility.
# import all required libaries
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

from sklearn.linear_model import LogisticRegression as lr
from sklearn import metrics
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score
irisdf = pd.read_csv("/content/Iris.csv")
#first 5 dataset
irisdf.head()

#last 5 dataset
irisdf.tail()

#description of dataset
irisdf.info()

# Dimension of data set
irisdf.shape

irisdf.size

#check for values of each species whether its balanced or imbalanced
irisdf['Species'].value_counts()

# Visualization in form of pie chart
irisdf['Species'].value_counts().plot(kind='pie',autopct='%.2f')

"""PREPROCESSING THE DATASET

"""

#Check if any null values is present in give dataset
irisdf.isnull().sum()

"""EXPLORATORY DATA ANALYSIS"""

#Scatter Plot to  visualize the datset
sns.FacetGrid(irisdf,hue='Species',height=3).map(plt.scatter,"SepalWidthCm" , "PetalLengthCm").add_legend()

plt.figure(figsize =(10,1.5))
sns.countplot(x='SepalLengthCm', data=irisdf, hue= irisdf['Species'], palette= 'winter')
plt.show()

# Calculate correlations on numerical columns only
irisdf.select_dtypes(include=['number']).corr()

flower_mapping= {'Iris-setosa': 0, 'Iris-versicolor' : 1, 'Iris-virginica' :2}
irisdf['Species'] = irisdf ['Species'].map (flower_mapping)
irisdf.head()

irisdf.tail()

x=irisdf[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm','PetalWidthCm']].values
y=irisdf[['Species']].values
model = lr()
model.fit(x,y)

expected = y
predicted = model.predict(x)
predicted